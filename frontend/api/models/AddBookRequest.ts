/* tslint:disable */
/* eslint-disable */
/**
 * Book Lib public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddBookRequest
 */
export interface AddBookRequest {
    /**
     * 
     * @type {string}
     * @memberof AddBookRequest
     */
    filePath: string;
    /**
     * 
     * @type {string}
     * @memberof AddBookRequest
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof AddBookRequest
     */
    description?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof AddBookRequest
     */
    authorIDs: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof AddBookRequest
     */
    categoryIDs: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof AddBookRequest
     */
    coverPath?: string;
}

/**
 * Check if a given object implements the AddBookRequest interface.
 */
export function instanceOfAddBookRequest(value: object): value is AddBookRequest {
    if (!('filePath' in value) || value['filePath'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('authorIDs' in value) || value['authorIDs'] === undefined) return false;
    if (!('categoryIDs' in value) || value['categoryIDs'] === undefined) return false;
    return true;
}

export function AddBookRequestFromJSON(json: any): AddBookRequest {
    return AddBookRequestFromJSONTyped(json, false);
}

export function AddBookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddBookRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'filePath': json['filePath'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'authorIDs': json['authorIDs'],
        'categoryIDs': json['categoryIDs'],
        'coverPath': json['coverPath'] == null ? undefined : json['coverPath'],
    };
}

export function AddBookRequestToJSON(json: any): AddBookRequest {
    return AddBookRequestToJSONTyped(json, false);
}

export function AddBookRequestToJSONTyped(value?: AddBookRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'filePath': value['filePath'],
        'title': value['title'],
        'description': value['description'],
        'authorIDs': value['authorIDs'],
        'categoryIDs': value['categoryIDs'],
        'coverPath': value['coverPath'],
    };
}

