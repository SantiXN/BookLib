/* tslint:disable */
/* eslint-disable */
/**
 * Book Lib public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthorInfo } from './AuthorInfo';
import {
    AuthorInfoFromJSON,
    AuthorInfoFromJSONTyped,
    AuthorInfoToJSON,
    AuthorInfoToJSONTyped,
} from './AuthorInfo';

/**
 * 
 * @export
 * @interface BookData
 */
export interface BookData {
    /**
     * 
     * @type {number}
     * @memberof BookData
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof BookData
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof BookData
     */
    coverPath: string;
    /**
     * 
     * @type {Array<AuthorInfo>}
     * @memberof BookData
     */
    authors: Array<AuthorInfo>;
    /**
     * 
     * @type {number}
     * @memberof BookData
     */
    starCount: number;
}

/**
 * Check if a given object implements the BookData interface.
 */
export function instanceOfBookData(value: object): value is BookData {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('coverPath' in value) || value['coverPath'] === undefined) return false;
    if (!('authors' in value) || value['authors'] === undefined) return false;
    if (!('starCount' in value) || value['starCount'] === undefined) return false;
    return true;
}

export function BookDataFromJSON(json: any): BookData {
    return BookDataFromJSONTyped(json, false);
}

export function BookDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookData {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'coverPath': json['coverPath'],
        'authors': ((json['authors'] as Array<any>).map(AuthorInfoFromJSON)),
        'starCount': json['starCount'],
    };
}

export function BookDataToJSON(json: any): BookData {
    return BookDataToJSONTyped(json, false);
}

export function BookDataToJSONTyped(value?: BookData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'coverPath': value['coverPath'],
        'authors': ((value['authors'] as Array<any>).map(AuthorInfoToJSON)),
        'starCount': value['starCount'],
    };
}

