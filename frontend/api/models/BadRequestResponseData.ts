/* tslint:disable */
/* eslint-disable */
/**
 * Book Lib public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BadRequestResponseData
 */
export interface BadRequestResponseData {
    /**
     * 
     * @type {string}
     * @memberof BadRequestResponseData
     */
    code: BadRequestResponseDataCodeEnum;
    /**
     * 
     * @type {string}
     * @memberof BadRequestResponseData
     */
    message: string;
}


/**
 * @export
 */
export const BadRequestResponseDataCodeEnum = {
    BadRequest: 'BadRequest'
} as const;
export type BadRequestResponseDataCodeEnum = typeof BadRequestResponseDataCodeEnum[keyof typeof BadRequestResponseDataCodeEnum];


/**
 * Check if a given object implements the BadRequestResponseData interface.
 */
export function instanceOfBadRequestResponseData(value: object): value is BadRequestResponseData {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function BadRequestResponseDataFromJSON(json: any): BadRequestResponseData {
    return BadRequestResponseDataFromJSONTyped(json, false);
}

export function BadRequestResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): BadRequestResponseData {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'message': json['message'],
    };
}

export function BadRequestResponseDataToJSON(json: any): BadRequestResponseData {
    return BadRequestResponseDataToJSONTyped(json, false);
}

export function BadRequestResponseDataToJSONTyped(value?: BadRequestResponseData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'message': value['message'],
    };
}

