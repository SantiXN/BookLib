/* tslint:disable */
/* eslint-disable */
/**
 * Book Lib public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ArticleData } from './ArticleData';
import {
    ArticleDataFromJSON,
    ArticleDataFromJSONTyped,
    ArticleDataToJSON,
    ArticleDataToJSONTyped,
} from './ArticleData';

/**
 * 
 * @export
 * @interface ListArticlesResponseData
 */
export interface ListArticlesResponseData {
    /**
     * 
     * @type {Array<ArticleData>}
     * @memberof ListArticlesResponseData
     */
    articles?: Array<ArticleData>;
}

/**
 * Check if a given object implements the ListArticlesResponseData interface.
 */
export function instanceOfListArticlesResponseData(value: object): value is ListArticlesResponseData {
    return true;
}

export function ListArticlesResponseDataFromJSON(json: any): ListArticlesResponseData {
    return ListArticlesResponseDataFromJSONTyped(json, false);
}

export function ListArticlesResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListArticlesResponseData {
    if (json == null) {
        return json;
    }
    return {
        
        'articles': json['articles'] == null ? undefined : ((json['articles'] as Array<any>).map(ArticleDataFromJSON)),
    };
}

export function ListArticlesResponseDataToJSON(json: any): ListArticlesResponseData {
    return ListArticlesResponseDataToJSONTyped(json, false);
}

export function ListArticlesResponseDataToJSONTyped(value?: ListArticlesResponseData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'articles': value['articles'] == null ? undefined : ((value['articles'] as Array<any>).map(ArticleDataToJSON)),
    };
}

