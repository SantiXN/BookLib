/* tslint:disable */
/* eslint-disable */
/**
 * Book Lib public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FeedbackInfo
 */
export interface FeedbackInfo {
    /**
     * 
     * @type {number}
     * @memberof FeedbackInfo
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof FeedbackInfo
     */
    userID: number;
    /**
     * 
     * @type {number}
     * @memberof FeedbackInfo
     */
    starCount: number;
    /**
     * 
     * @type {string}
     * @memberof FeedbackInfo
     */
    comment?: string;
    /**
     * unix timestamp
     * @type {number}
     * @memberof FeedbackInfo
     */
    postedAt: number;
}

/**
 * Check if a given object implements the FeedbackInfo interface.
 */
export function instanceOfFeedbackInfo(value: object): value is FeedbackInfo {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userID' in value) || value['userID'] === undefined) return false;
    if (!('starCount' in value) || value['starCount'] === undefined) return false;
    if (!('postedAt' in value) || value['postedAt'] === undefined) return false;
    return true;
}

export function FeedbackInfoFromJSON(json: any): FeedbackInfo {
    return FeedbackInfoFromJSONTyped(json, false);
}

export function FeedbackInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedbackInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userID': json['userID'],
        'starCount': json['starCount'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'postedAt': json['postedAt'],
    };
}

export function FeedbackInfoToJSON(json: any): FeedbackInfo {
    return FeedbackInfoToJSONTyped(json, false);
}

export function FeedbackInfoToJSONTyped(value?: FeedbackInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userID': value['userID'],
        'starCount': value['starCount'],
        'comment': value['comment'],
        'postedAt': value['postedAt'],
    };
}

